<?php

/**
 * Enable the os_pinserver_auth module.
 */
function hwpi_update_7001(&$sandbox) {
  module_enable(array('os_pinserver_auth'));
}

/**
 * Grants anonymous users access to create department sites.
 */
//function hwpi_update_7002() {
//  $permissions = array(
//    'create department content',
//  );
//  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, $permissions);
//}

/**
 * Sets action menu order to be correct after css change reversed it
 */
function hwpi_update_7003(&$sb) {
  $sites = db_select('spaces_overrides', 'so')
    ->fields('so')
    ->condition('object_type', 'context')
    ->condition('value', '%menu%', 'LIKE')
    ->condition('value', '%header_third%', 'LIKE')
    ->execute();

  $reversed = array();
  foreach ($sites as $s) {
    $s->value = unserialize($s->value);
    $menus = array_filter($s->value['blocks'], '_hwpi_is_header_third_menu');

    foreach ($menus as $m) {
      if (empty($reversed[$s->id][$m['delta']])) {
        _hwpi_reverse_menu($s->id, $m['delta']);
        $reversed[$s->id][$m['delta']] = true;
      }
    }
  }
}

function _hwpi_is_header_third_menu($item) {
  return ($item['region'] == 'header_third' && $item['module'] == 'os');
}

function _hwpi_reverse_menu($site, $key) {
  $controller = new spaces_controller_menus('menus', 'og', $site);
  $menu = $controller->get($key);

  $start = NULL;
  foreach ($menu as $m) {
    if ($start == NULL) {
      $start = $m['weight'];
    }
    elseif ($m['weight'] < $start) {
      $start = $m['weight'];
    }
  }

  // reverse order
  uasort($menu, function ($a, $b) {
    if ($a['weight'] == $b['weight']) {
      return 0;
    }

    return ($a['weight'] < $b['weight']) ? 1 : -1;
  });

  foreach ($menu as $k => $m) {
    $menu[$k]['weight'] = $start++;
  }

  $controller->set($key, $menu);
}

/**
 * Enables new `College` theme and set new featured themes variable to highlight
 * and describe HWPI themes.
 */
function hwpi_update_7005() {
  // Enables the new `hwpi_college` theme.
  theme_enable(array('hwpi_college'));
  // Sets the description that appears under "Featured Themes" heading.
  $name = 'cp_appearance_featured_description';
  $value = t('Mobile-friendly themes using Harvard color palettes.');
  variable_set($name, $value);

  // Sets the themes to use as featured themes.
  $name = 'cp_appearance_featured_themes';
  $value = drupal_map_assoc(array('hwpi_classic', 'hwpi_modern', 'hwpi_vibrant', 'hwpi_college', 'hwpi_widener', 'hwpi_sterling'));
  variable_set($name, $value);
}

/**
 * Enables new `Onepage` theme.
 */
function hwpi_update_7006() {
    // Enables the new `hwpi_onepage` theme.
    theme_enable(array('hwpi_onepage'));
}

/**
 * Set Image Magick variables.
 */
function openscholar_update_7007() {
  module_enable(array('imagemagick'));
  variable_set('image_toolkit', 'imagemagick');
  variable_set('imageapi_optimize_toolkit', 'imagemagick');
  variable_set('imagemagick_convert', '/usr/bin/convert');
  variable_set('imagemagick_debug', 1);
  variable_set('imagemagick_gm', 0);
  variable_set('imagemagick_quality', '75');
}

/**
 * Change Help Documenation screenshot
 */
function hwpi_update_7008() {
  $nid = variable_get('vsite_register_welcome_message', 0);
   if ($nid > 0) {
    $node = node_load($nid);
    if ($node) {
      $node->body['und'][0]['value'] = str_replace('https://cloud.githubusercontent.com/assets/867075/13850911/66ce079a-ec32-11e5-80cc-5cb577f96d19.png', 'https://cloud.githubusercontent.com/assets/867075/22668310/48267e28-ec8e-11e6-95cc-0eb13240eeda.png', $node->body['und'][0]['value']);
      node_save($node);
    }
  }
}

/**
 * Change registration "From:" email and also the admin mail address
 */
function hwpi_update_7012() {
  variable_set('vsite_register_admin_mail', 'swap@lists.iq.harvard.edu, hwp@harvard.edu');
  variable_set('site_mail', 'hwp@harvard.edu');
}

/**
 * Update overridden search contexts to use the correct facetapi blocks.
 */
function hwpi_update_7013() {
  // This list is generated by comparing the results from facetapi_block_info().
  $map = array(
    // hwpi
    'https://hwpi.harvard.edu' => array(
      'DaXWfzsRBg8cSABKdOBcdMR4my3UJIDm' => 'eJvMPs4fjgClFexFpRotSGOkmK23YEEH',
      '38EPFJErFkVhEcRB6wpNqaoW4PFc5VIN' => 'iOyu0MGOtb04IH3OUPl3cYsrOcUMWrAg',
      'DlhaXac1Q1cdoFYGoygJolj8Yc4zr88l' => 'eHvZz9Iu7ObxTJd52jx6DHvvCHUY42Gq',
      'H8t5HB0FXQR0lyo2OdJ6i9pqGROuNg6r' => 'M06M8bRtnAHysGHuNo4wQcGbgTxgVZGx',
    ),
    // scholar - checked. all of them are here
    'https://scholar.harvard.edu' => array(
      'DaXWfzsRBg8cSABKdOBcdMR4my3UJIDm' => 'J8lt5irnVs0YqsBZgj1HN1JeAf88l3Qi',
      'DlhaXac1Q1cdoFYGoygJolj8Yc4zr88l' => 'KaaD6GVDye8AXBK3lDCg0XNbtATipsGt',
      '38EPFJErFkVhEcRB6wpNqaoW4PFc5VIN' => 'BJLms1XUnJRnHX82A5nb95WtWCOIGqhN',
      'H8t5HB0FXQR0lyo2OdJ6i9pqGROuNg6r' => 'u1BPBbYky1RxTDubKb7o4L1JZ2jRXDyl',
    ),
    // projects
    'https://projects.iq.harvard.edu' => array(
      'PMpVJWO6c91T745p9vE10uHdOupXlUAr' => 'tjQxAvkr2Dad3q4ziNe520Urug1u1AtG',
      'EfqhDbsKwq2FRR8TA3vIhBVaAZY4uWOJ' => '7s0iWH3x3E8RYqWcHY87AXsWNIQGCHYD',
      'DaXWfzsRBg8cSABKdOBcdMR4my3UJIDm' => '7s0iWH3x3E8RYqWcHY87AXsWNIQGCHYD',
      '38EPFJErFkVhEcRB6wpNqaoW4PFc5VIN' => '0kbkkcBk302XNnHWD6SlIyNgiSyZ8wmX',
      'DlhaXac1Q1cdoFYGoygJolj8Yc4zr88l' => 'jx2Satovqi4XNc2xzo5vxzwuymvVXobm',
      'H8t5HB0FXQR0lyo2OdJ6i9pqGROuNg6r' => 'ft0NqZ413ZYzUdHAtNlBrlN2GVaYWJUd',
    ),
  );

  $q = db_select('spaces_overrides', 'so')
    ->fields('so')
    ->condition('object_id', 'os_search:reaction:block')
    ->execute();

  $count = 0;
  if ($site = variable_get('purl_base_domain')) {
    foreach ($q as $r) {
      $value = unserialize($r->value);
      foreach ($map[$site] as $orig => $repl) {
        $k_old = 'facetapi-' . $orig;
        $k_new = 'facetapi-' . $repl;
        if (isset($value['blocks'][$k_old])) {
          $value['blocks'][$k_new] = $value['blocks'][$k_old];
          $value['blocks'][$k_new]['delta'] = $repl;
          unset($value['blocks'][$k_old]);
          $count++;
        }
      }

      if ($count) {
        db_update('spaces_overrides')
          ->fields(array(
            'value' => serialize($value),
          ))
          ->condition('id', $r->id)
          ->condition('object_type', $r->object_type)
          ->condition('object_id', $r->object_id)
          ->execute();
      }
    }
  }

  return t('@count Contexts have been updated.', array('@count' => $count));
}

/**
 * Saving strongarm variables to separate DASH option.
 */
function hwpi_update_7014() {
  $revert = array(
    'hwpi' => array(
      'variable',
    )
  );
  features_revert($revert);
}

/**
 * Saving strongarm variables for header and footer.
 */
function hwpi_update_7016() {
  $revert = array(
    'hwpi' => array(
      'variable',
    )
  );
  features_revert($revert);
}

/**
 * Saving strongarm variables for e-mails.
 */
function hwpi_update_7017() {
  $revert = array(
    'hwpi' => array(
      'variable',
    )
  );
  features_revert($revert);
}

/**
 * Add Terms of Use var
 */
function hwpi_update_7018() {
  $revert = array(
    'hwpi' => array(
      'variable',
    )
  );
  features_revert($revert);
}

/**
 * Saving strongarm variables to apply new menu item in footer.
 */
function hwpi_update_7019() {
  $revert = array(
    'hwpi' => array(
      'variable',
    )
  );
  features_revert($revert);
}
